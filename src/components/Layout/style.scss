$grid-justify-content: ( start: flex-start, center: center, end: flex-end, space-between: space-between, space-around: space-around);
$grid-align-items: ( top: flex-start, middle: center, bottom: flex-end);
$grid-size: ( xs: 576px, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1600px) !default;
$grid-colums: 24;
@include bem-block("row") {
    display: flex;
    flex-flow: row wrap;
    &::before,
    &::after {
        display: flex;
    }
    @each $justify in map-keys($grid-justify-content) {
        @include bem-modifier($justify) {
            justify-content: map-get($grid-justify-content, $justify);
        }
    }
    @each $align in map-keys($grid-align-items) {
        @include bem-modifier($align) {
            align-items: map-get($grid-align-items, $align);
        }
    }
}

@include bem-block('col') {
    display: block;
    position: relative;
}

@for $i from 1 through $grid-colums {
    @include bem-block("col-#{$i}") {
        width: ($i / $grid-colums * 100) * 1%;
    }
    @include bem-block("col-offset-#{$i}") {
        margin-left: ($i / $grid-colums * 100) * 1%;
    }
}

@each $size in map-keys($grid-size) {
    $condition: min-width;
    @if $size=="xs" {
        $condition: max-width;
    }
    @media only screen and ($condition: map-get($grid-size, $size)) {
        @for $i from 1 through $grid-colums {
            @include bem-block("col-#{$size}-#{$i}") {
                width: ($i / $grid-colums * 100) * 1%;
            }
        }
    }
}